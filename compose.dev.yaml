services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: spray-postgres
    environment:
      POSTGRES_DB: tacdb
      POSTGRES_USER: tacdb_owner
      POSTGRES_PASSWORD: npg_lUXQNZzx2J1d
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - spray-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tacdb_owner -d tacdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: spray-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tacdb
      SPRING_DATASOURCE_USERNAME: tacdb_owner
      SPRING_DATASOURCE_PASSWORD: npg_lUXQNZzx2J1d
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      AWS_COGNITO_REGION: sa-east-1
      AWS_COGNITO_URL: https://cognito-idp.sa-east-1.amazonaws.com
      AWS_COGNITO_USER_POOL_ID: sa-east-1_SUUgsSLnt
      AWS_COGNITO_CLIENT_ID: p0e4cic354t817u87oom27gmb
      AWS_COGNITO_CLIENT_SECRET: apesadp9o80quqci1u9c9dnvj868021r44v6k9d0v000nv4va3r
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spray-network
    volumes:
      - ./backend:/app
      - /app/target
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: spray-frontend
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_APP_NAME=Sistema de Pulverização
    ports:
      - "3000:3000"
    networks:
      - spray-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    depends_on:
      - api

  # Database Admin
  adminer:
    image: adminer:4.8.1
    container_name: spray-adminer
    ports:
      - "8081:8080"
    networks:
      - spray-network
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:
    driver: local

networks:
  spray-network:
    driver: bridge
